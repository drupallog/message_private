<?php
/**
 * Message Private installer.
 */

/**
 * Implements hook_install().
 *
 * Creates a new bundle type private_message, creates field bases and field
 * instances and associates them to the bundle.
 */
function message_private_install() {

  // Ensure translations don't break during installation.
  $t = get_t();

  $bundle = entity_import('message_type', '{
    "name" : "private_message",
    "description" : "Private Message",
    "argument_keys" : [],
    "argument" : [],
    "category" : "message_type",
    "data" : {
      "token options" : { "clear" : 1 },
      "purge" : { "override" : 1, "enabled" : 0, "quota" : "", "days" : "" }
    },
    "language" : "en",
    "arguments" : null,
    "message_text" : { "und" : [
        {
          "value" : "Private Message - ",
          "format" : "plain_text",
          "safe_value" : "\u003Cp\u003EPrivate Message -\u003C\/p\u003E\n"
        },
        {
          "value" : "This message was sent by [message:user:mail]. Please login to [site:url]message\/[message:mid] to view your message.",
          "format" : "plain_text",
          "safe_value" : "\u003Cp\u003EThis message was sent by [message:user:mail]. Please login to [site:url]message\/[message:mid] to view your message.\u003C\/p\u003E\n"
        }
      ]
    }
  }');
  if (!entity_load_single('message_type', 'private_message')) {
    entity_save('message_type', $bundle);
  }
  else {
    drupal_set_message($t('"private_message" bundle was previously defined on the system'), 'warning');
  }

  $field_bases = array();

  $field_bases['field_message_body'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_message_body',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(),
    'translatable' => 0,
    'type' => 'text_long',
  );

  $field_bases['field_message_subject'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_message_subject',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(),
    'translatable' => 0,
    'type' => 'text_long',
  );

  $field_bases['field_message_user_ref'] = array(
    'active' => 1,
    'cardinality' => -1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_message_user_ref',
    'foreign keys' => array(
      'users' => array(
        'columns' => array(
          'target_id' => 'uid',
        ),
        'table' => 'users',
      ),
    ),
    'indexes' => array(
      'target_id' => array(
        0 => 'target_id',
      ),
    ),
    'locked' => 0,
    'module' => 'entityreference',
    'settings' => array(
      'handler' => 'base',
      'handler_settings' => array(
        'behaviors' => array(
          'views-select-list' => array(
            'status' => 0,
          ),
        ),
        'sort' => array(
          'type' => 'none',
        ),
        'target_bundles' => array(),
      ),
      'target_type' => 'user',
    ),
    'translatable' => 0,
    'type' => 'entityreference',
  );

  $field_bases['field_private_message_notify'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_private_message_notify',
    'foreign keys' => array(),
    'indexes' => array(
      'value' => array(
        0 => 'value',
      ),
    ),
    'locked' => 0,
    'module' => 'list',
    'settings' => array(
      'allowed_values' => array(
        0 => 0,
        1 => 1,
      ),
      'allowed_values_function' => '',
    ),
    'translatable' => 0,
    'type' => 'list_boolean',
  );

  foreach ($field_bases as $field_base) {
    field_create_field($field_base);
  }

  $field_instances = array();

  $field_instances['message-private_message-field_message_body'] = array(
    'bundle' => 'private_message',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 2,
      ),
      'message_notify_email_body' => array(
        'label' => 'hidden',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 0,
      ),
      'message_notify_email_subject' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 4,
      ),
    ),
    'entity_type' => 'message',
    'field_name' => 'field_message_body',
    'label' => $t('Body'),
    'required' => 0,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => 5,
      ),
      'type' => 'text_textarea',
      'weight' => 2,
    ),
  );

  $field_instances['message-private_message-field_message_subject'] = array(
    'bundle' => 'private_message',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'inline',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 1,
      ),
      'message_notify_email_body' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 3,
      ),
      'message_notify_email_subject' => array(
        'label' => 'hidden',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 1,
      ),
    ),
    'entity_type' => 'message',
    'field_name' => 'field_message_subject',
    'label' => $t('Subject'),
    'required' => 0,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => 1,
      ),
      'type' => 'text_textarea',
      'weight' => 1,
    ),
  );

  $field_instances['message-private_message-field_message_user_ref'] = array(
    'bundle' => 'private_message',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'inline',
        'module' => 'entityreference',
        'settings' => array(
          'link' => 1,
        ),
        'type' => 'entityreference_label',
        'weight' => 0,
      ),
      'message_notify_email_body' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 4,
      ),
      'message_notify_email_subject' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 5,
      ),
    ),
    'entity_type' => 'message',
    'field_name' => 'field_message_user_ref',
    'label' => $t('To Users'),
    'required' => 1,
    'settings' => array(
      'behaviors' => array(
        'prepopulate' => array(
          'action' => 'none',
          'action_on_edit' => 0,
          'fallback' => 'none',
          'providers' => array(
            'og_context' => FALSE,
            'url' => 1,
          ),
          'skip_perm' => 0,
          'status' => 1,
        ),
      ),
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'match_operator' => 'CONTAINS',
        'path' => '',
        'size' => 60,
      ),
      'type' => 'entityreference_autocomplete',
      'weight' => -1,
    ),
  );

  $field_instances['user-user-field_private_message_notify'] = array(
    'bundle' => 'user',
    'default_value' => array(
      0 => array(
        'value' => 1,
      ),
    ),
    'deleted' => 0,
    'description' => $t('Receive email notifications for new Private Messages'),
    'display' => array(
      'default' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 1,
      ),
    ),
    'entity_type' => 'user',
    'field_name' => 'field_private_message_notify',
    'label' => $t('Private Message Notifications'),
    'required' => 0,
    'settings' => array(
      'user_register_form' => 1,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(
        'display_label' => 1,
      ),
      'type' => 'options_onoff',
      'weight' => 12,
    ),
  );

  foreach ($field_instances as $field_instance) {
    field_create_instance($field_instance);
  }
}

/**
 * Implements hook_uninstall().
 *
 * Deletes the fields associated to the bundle, then deletes the bundle.
 */
function message_private_uninstall() {

  // Ensure translations don't break during installation.
  $t = get_t();

  // Delete field instances as well as the field instances themselves.
  field_attach_delete_bundle('message_type', 'private_message');

  // Set indicator that the message type is not yet removed.
  $removed = FALSE;

  // Check if there are message types on the system. Get the message types and
  // get the id of the private_message type and remove it and set the indicator
  // to state removed.
  if (entity_get_info('message_type')) {
    $message_types = entity_load('message_type');
    foreach ($message_types as $message_type) {
      if ($message_type->name == 'private_message') {
        entity_delete('message_type', $message_type->id);
        $removed = TRUE;
      }
    }
  }

  // Indicates the private_message was not removed, if so, it was not on system.
  if (!$removed) {
    drupal_set_message($t('"private_message" bundle was previously removed from the system'), 'warning');
  }

  // Ensure that all fields defined by this module are deleted.
  field_delete_field('field_message_subject');
  field_delete_field('field_message_body');
  field_delete_field('field_message_user_ref');
  // Field on user entity.
  field_delete_field('field_private_message_notify');

  // Delete default variables for message limit.
  variable_del('message_private_default_limit');
  variable_del('message_private_default_interval');

  // Cycle through the roles and delete associated message limit variables.
  foreach (user_roles() as $role) {
    $role_name = str_replace(' ', '_', $role);
    variable_del('message_private_' . $role_name . '_limit');
    variable_del('message_private_' . $role_name . '_interval');
  }
}

/**
 * Implements hook_update_N().
 *
 * Removes flag: 'private_message_notify' and adds boolean field to user entity:
 * 'field_private_message_notify'.
 */
function message_private_update_7100() {

  // Ensure translations don't break during installation.
  $t = get_t();

  // Uninstall Flag data and delete flag.
  $flag = flag_get_flag('private_message_notify');
  // If the flag does not exist then NULL is returned.
  if ($flag) {
    // If the flag exist then reset and delete the flag.
    flag_reset_flag($flag);
    $flag->delete();
  }
  else {
    throw new DrupalUpdateException('The flag "private_message_notify" was not found.');
  }

  // Add new field to the user.
  $field_base = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_private_message_notify',
    'foreign keys' => array(),
    'indexes' => array(
      'value' => array(
        0 => 'value',
      ),
    ),
    'locked' => 0,
    'module' => 'list',
    'settings' => array(
      'allowed_values' => array(
        0 => 0,
        1 => 1,
      ),
      'allowed_values_function' => '',
    ),
    'translatable' => 0,
    'type' => 'list_boolean',
  );

  if (!field_create_field($field_base)) {
    throw new DrupalUpdateException('Could not create "field_private_message_notify" field base.');
  }

  $field_instance = array(
    'bundle' => 'user',
    'default_value' => array(
      0 => array(
        'value' => 1,
      ),
    ),
    'deleted' => 0,
    'description' => $t('Receive email notifications for new Private Messages'),
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'list',
        'settings' => array(),
        'type' => 'list_default',
        'weight' => 1,
      ),
    ),
    'entity_type' => 'user',
    'field_name' => 'field_private_message_notify',
    'label' => $t('Private Message Notifications'),
    'required' => 0,
    'settings' => array(
      'user_register_form' => 1,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(
        'display_label' => 1,
      ),
      'type' => 'options_onoff',
      'weight' => 12,
    ),
  );

  if (!field_create_instance($field_instance)) {
    throw new DrupalUpdateException('Could not create "field_private_message_notify" field instance.');
  }

  return t('Updates were successful.');
}
